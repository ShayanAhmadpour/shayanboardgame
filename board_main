import pygame
from images import loaad

WIDTH = 455
HEIGHT = 665
DEMENSION1 = 7
DEMENSION2 = 5
SQ_SIZE = WIDTH // DEMENSION2

DGREEN =(90, 143, 10)
LGREEN =(158, 245, 27)
WHITE=(255,255,255)
BLACK=(0,0,0)
FPS = 30
IMAGES = {}

pygame.display.set_caption("Derby")

def loadImages():
    pieces =["b2","b3","b4","b5","b6","r2","r3","r4","r5","r6"]
    for piece in pieces:
        IMAGES[piece] = pygame.transform.scale(pygame.image.load("w" + piece + ".png"),(SQ_SIZE, SQ_SIZE))

def main():
    pygame.init()
    clock = pygame.time.Clock()
    screen = pygame.display.set_mode((WIDTH + 40, HEIGHT + 202))
    gs=loaad.Board()
    loadImages()
    run = True
    sqSelected = ()#no square selected,keep track of the last click of the user(row,col)
    playerClicks = [] #keep track of player clicks(two tuples:(6,4),(4,4))

    while run:
        clock.tick(FPS)
        for e in pygame.event.get():
            if e.type == pygame.QUIT:
                run = False
            elif e.type == pygame.MOUSEBUTTONDOWN:
                location = pygame.mouse.get_pos()#(x,y)location of mouse
                col = location[0]//SQ_SIZE
                row = location[1]//SQ_SIZE
                if sqSelected == (row, col):
                    sqSelected = () #deselect
                    playerClicks = [] #clear player clicks
                else:
                    sqSelected = (row-1, col)
                    playerClicks.append(sqSelected) #append for both 1st and 2nd clicks
                if len(playerClicks) == 2:
                    move = loaad.Move(playerClicks[0], playerClicks[1],gs.board)
                    print(move.getGameLocation())
                    gs.makeMove(move)
                    sqSelected = ()
                    playerClicks = []
            elif e.type == pygame.KEYDOWN:
                if e.key == pygame.K_z: #undo when "z" is pressed
                    gs.undoMove()
        drawGameState(screen, gs)
        pygame.display.update()
    pygame.quit()

def drawGameState(screen, gs):
    drawBoard(screen)
    drawPieces(screen, gs.board)
def drawBoard(screen):
    screen.fill(DGREEN)
    for row in range(DEMENSION2):
        for coloumn in range(row % 2, DEMENSION1, 2):
            pygame.draw.rect(screen,LGREEN,(20+row*SQ_SIZE, 101+coloumn*SQ_SIZE, SQ_SIZE, SQ_SIZE))
    darvazeh=pygame.Rect(202, 0, SQ_SIZE, SQ_SIZE)
    darvazeh2=pygame.Rect(202, 748, SQ_SIZE, SQ_SIZE)
    pygame.draw.rect(screen, WHITE, darvazeh)
    pygame.draw.rect(screen, WHITE, darvazeh2)
    khate_darvazeh=pygame.Rect(20, 91, WIDTH,10)
    khate_darvazeh2=pygame.Rect(20, 738, WIDTH,10)
    khate_darvazeh3=pygame.Rect(10, 91, 10, HEIGHT-8)
    khate_darvazeh4=pygame.Rect(20+WIDTH, 91, 10, HEIGHT-8)
    pygame.draw.rect(screen, WHITE, khate_darvazeh)
    pygame.draw.rect(screen, WHITE, khate_darvazeh2)
    pygame.draw.rect(screen, WHITE, khate_darvazeh3)
    pygame.draw.rect(screen, WHITE, khate_darvazeh4)
def drawPieces(screen, board):
    for row in range(DEMENSION1):
        for coloumn in range(DEMENSION2):
            piece = board[row][coloumn]
            if piece != "__":
                screen.blit(IMAGES[piece], pygame.Rect(coloumn*SQ_SIZE+20, row*SQ_SIZE+100, SQ_SIZE, SQ_SIZE))


main()
